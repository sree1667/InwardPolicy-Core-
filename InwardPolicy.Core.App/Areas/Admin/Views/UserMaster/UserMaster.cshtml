@model InwardPolicy.Admin.Models.UserMasterModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .modal-header {
        background-color: #87E0E0;
    }

    #modalHeading {
        font-size: 50px;
    }
</style>

<div class="container bg-light p-4 border rounded shadow mt-2">
    @*Row1*@

    <div class=" text-end justify-content-center mb-3">
        <button id="btnAddNew" type="button" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Add New
        </button>
    </div>
    <form id="frmUserMaster" method="post">
        <div class="row justify-content-center mb-3">
            @*<div class="container bg-light p-4 border rounded shadow mt-2">*@
            <table class="table table-hover" id="tblUserMaster">
                <thead>
                    <tr class="table-info">
                        <th scope="col">Type</th>
                        <th scope="col">Code</th>
                        <th scope="col">Active</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
            @*</div>*@
        </div>
    </form>
</div>

@* Modal *@

<div class="modal rounded fade" id="modalCodesMaster" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content rounded">
            <div class="modal-header text-lg-center text-white">
                <h5 id="modalHeading">Codes Master</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalCodesMasterBody">
                ViewComponent content will be loaded here dynamically
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
        // Get TempData values from Razor
            var message = '@TempData["Message"]';
            var title = '@TempData["Title"]';
            var icon = '@TempData["Icon"]';

            // Check if a message exists
            if (message) {
                Swal.fire({
                    title: title,
                    text: message,
                    icon: icon
                });
            }
        });
        $(document).ready(function () {
            $("#txtPassword").attr("type", "password");
            var mode = $("#hfMode").val();
            ////var Password = $("#hfPassword").val();
            //var userId = $("#hfUserId").val();
            ////console.log(Password);
            //console.log(userId);
            if (mode == 'U'){
                $("#txtUserId").prop("readonly", true);
                document.getElementById("btnUpdate").style.display = "block"; // to show the button
                document.getElementById("btnAddNew").style.display = "block"; // to show the button
                document.getElementById("btnSave").style.display = "none";
                $("#txtUserId").val();
            }


            //add new
            $(function () {
                $('#btnAddNew').click(function () {
                    var CodeMasterViewModel = null;
                    $.ajax({
                        url: "@Url.Action("ShowModal", "UserMaster",new { area = "Admin" })",
                        type: 'GET',
                        contentType: 'application/json',
                        data: JSON.stringify(CodeMasterViewModel),
                        success: function (UserMasterViewComponent) {
                            $("#modalCodesMasterBody").html(UserMasterViewComponent);
                            $("#modalCodesMaster").modal("show");
                            //$("#txtcode").prop("readonly", false);
                            //$("#txttype").prop("readonly", false);
                        },
                        error: function (xhr, status, error) {
                            console.log('Error: ' + error);
                        }
                    });
                });
        })

            $('#tblUserMaster').DataTable({
                //dom: 'Bfrtip', // Define layout for plugins
                buttons: [
                    'copy', 'excel', 'pdf', 'csv', 'print' // Add more buttons if needed
                ],
                ajax: {
                    url: '@Url.Action("UserMasterBind", "UserMaster", new { area = "Admin" })',
                    type: "POST"
                },
                processing: true,
                //colReorder: true,
                serverSide: true,
                //ordering: true, // Enable ordering
                searching: true, // Enable search
                paging: true, // Enable pagination
                //orderMulti: true, // Single column sorting
                pageLength: 10, // Default number of rows per page
                lengthMenu: [5, 10, 20, 50, 100], // Options for rows per page
                columns: [
                    { data: "USER_ID", name: "USER_ID", autoWidth: true },
                    { data: "USER_NAME", name: "USER_NAME", autoWidth: true },
                    { data: "USER_ACTIVE_YN", name: "USER_ACTIVE_YN", autoWidth: true },
                    {
                        render: function (data, type, row) {
                            if (row.CM_ACTIVE_YN === 'Y') {
                                return "<a onclick=UpdateUserMaster('" + row.USER_ID + "'); ><i class='bi bi-pencil'></i></a>";
                            } else {
                                return "<a onclick=UpdateUserMaster('" + row.USER_ID + "');><i class='bi bi-pencil'></i></a>" +
                                    "<a onclick=DeleteUserMaster('" + row.USER_ID + "');><i class='bi bi-trash'></i></a>";
                            }
                        }
                    }
                ],
            });
        });

        function DeleteUserMaster(UserId) {
            Swal.fire({
                title: 'Are you sure you want to delete?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel'  
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "DELETE",
                        url: '@Url.Action("DeleteUserMaster", "UserMaster")',
                        data: { userId: UserId },
                        success: function (response) {
                            if (response) {
                                Swal.fire({
                                    title: response.title ,
                                    text: response.message ,
                                    icon: response.icon
                                });
                            } else {
                                Swal.fire({
                                    title: "Error",
                                    text: "An unexpected error occurred.",
                                    icon: "error"
                                });
                            }
                            $('#tblUserMaster').DataTable().ajax.reload(); // Refresh the DataTable
                        },
                        error: function (xhr, status, error) {
                            console.error("Error occurred during deletion:", error);
                            console.log("Server response:", xhr.responseText);

                            Swal.fire({
                                title: "Error",
                                text: "Failed to delete the user. Please try again.",
                                icon: "error"
                            });
                        }
                    });
                }
            });
        }




        function UpdateUserMaster(UserId) {
           console.log("Updating user with ID:", UserId);
            $.ajax({
            type: "GET",
            url: '@Url.Action("GetUserMasterDetails", "UserMaster")',
            data: { userId: UserId },
                success: function (UserMasterViewComponent) {
                    $("#modalCodesMasterBody").html(UserMasterViewComponent);
                    $("#modalCodesMaster").modal("show");
            },
            error: function (xhr, status, error) {
                console.error("Error occurred during deletion:", error);
                console.log("Server response:", xhr.responseText);
            }
        });
        }
        //document.getElementById("btnUpdate").addEventListener("click", function () {
        //    console.log("Update button clicked");
        //});
        //function btnAddNewClick() {
        //    console.log("Update add new clicked");
        //    $("#txtUserId").val('');
        //    $("#txtUserId").prop("readonly", false);

        //    $("#txtUserName").val('');
        //    $("#txtPassword").val('');
        //    $("#flexSwitchCheckChecked").prop("checked", true);
        //    $('#hfMode').val('I');
        //    document.getElementById("btnUpdate").style.display = "none"; // to show the button
        //    document.getElementById("btnAddNew").style.display = "none"; // to show the button
        //    document.getElementById("btnSave").style.display = "block"; // to hide the button

        //}

        //duplication check
        function CheckUserId() {
            var userId=$("#txtUserId").val();
            $.ajax({
            type: "POST",
            url: '@Url.Action("CheckUserId", "UserMaster")',
            data: { userId: userId },
            success: function (response) {
                    console.log(response);
                    if (response.status === true) {
                        //console.log("clear");
                        Swal.fire({
                            title: response.title || "Error",
                            text: response.message || "User already exixt.",
                            icon: response.icon || "error"
                        });
                            $("#txtUserId").val('');
                    }
            },
            error: function (xhr, status, error) {
                console.error("Error occurred during deletion:", error);
                console.log("Server response:", xhr.responseText);
            }
            });
        }





    </script>

}

