@model InwardPolicy.Models.ErrorCodeMasterModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .modal-header {
        background-color: #87E0E0;
    }

    #modalHeading {
        font-size: 50px;
    }
</style>

<div class="container bg-light p-4 border rounded shadow mt-2">
    @*Row1*@

    <div class=" text-end justify-content-center mb-3">
        <button id="btnAddNew" type="button" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Add New
        </button>
    </div>
    <form id="frmUserMaster" method="post">
        <div class="row justify-content-center mb-3">
            @*<div class="container bg-light p-4 border rounded shadow mt-2">*@
            <table class="table table-hover" id="tblErrorCodeMaster">
                <thead>
                    <tr class="table-info">
                        <th scope="col">Type</th>
                        <th scope="col">Code</th>
                        <th scope="col">Active</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
            @*</div>*@
        </div>
    </form>
</div>

@* Modal *@

<div class="modal rounded fade" id="modalCodesMaster" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content rounded">
            <div class="modal-header text-lg-center text-white">
                <h5 id="modalHeading">Codes Master</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalCodesMasterBody">
                 ViewComponent content will be loaded here dynamically 
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>

        $(document).ready(function () {
            const swalTitle = '@TempData["Title"]';
            const swalMessage = '@TempData["Message"]';
            console.log(swalMessage);
            const swalIcon = '@TempData["Icon"]';
            if (swalTitle && swalMessage && swalIcon) {
                Swal.fire({
                    title: swalTitle,
                    text: swalMessage,
                    icon: swalIcon
                });
            }


            //datatable
            $('#tblErrorCodeMaster').DataTable({
                //dom: 'Bfrtip', // Define layout for plugins
                buttons: [
                    'copy', 'excel', 'pdf', 'csv', 'print' // Add more buttons if needed
                ],
                ajax:{
                    url: '@Url.Action("ErrorCodeMasterBind", "ErrorCodeMaster", new { area = "Admin" })',
                    type: "POST"
                },
                processing: true,
                //colReorder: true,
                serverSide: true,
                //ordering: true, // Enable ordering
                searching: true, // Enable search
                paging: true, // Enable pagination
                //orderMulti: true, // Single column sorting
                pageLength: 10, // Default number of rows per page
                lengthMenu: [5, 10, 20, 50, 100], // Options for rows per page
                columns: [
                    { data: "ERR_TYPE", name: "USER_ID", autoWidth: true },
                    { data: "ERR_CODE", name: "USER_NAME", autoWidth: true },
                    { data: "ERR_DESC", name: "USER_ACTIVE_YN", autoWidth: true },
                    {

                        render: function (data, type, row) {
                            if (row.CM_ACTIVE_YN === 'Y') {
                                return "<a onclick=\"UpdateErrorCodeMaster('" + row.ERR_CODE + "');\"><i class='bi bi-pencil'></i></a>";
                            } else {
                                return "<a onclick=\"UpdateErrorCodeMaster('" + row.ERR_CODE + "');\"><i class='bi bi-pencil'></i></a>" +
                                    "<a onclick=\"DeleteErrorCodeMaster('" + row.ERR_CODE + "');\"><i class='bi bi-trash'></i></a>";
                            }
                        }



                    }
                ],

            });
        });
        //delete
        function DeleteErrorCodeMaster(code) {
            //console.log("Deleting user with ID:", UserId);
            console.log(code);
            //console.log(CM_TYPE );
            $.ajax({
                type: "DELETE",
                url: '@Url.Action("DeleteErrorCodeMaster", "ErrorCodeMaster")',
                data: { code: code  },
                success: function (response) {
                    console.log("AJAX request was successful. Response:", response);
                    if (response===true) {
                        Swal.fire({
                            title: "Success",
                            text: "Deleted successfully!",
                            icon: "success"
                        });
                    }
                    else {
                        Swal.fire({
                            title: "Success",
                            text:"Deleted successfully!",
                            icon: "success"
                        });
                    }
                    $('#tblErrorCodeMaster').DataTable().ajax.reload();
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred during deletion:", error);
                    console.log("Server response:", xhr.responseText);

                }
            });
        }

        //Update
        function UpdateErrorCodeMaster(code) {
            //console.log("Deleting user with ID:", UserId);
            console.log(code);
            //console.log(CM_TYPE);
            $.ajax({
            type: "GET",
            url: '@Url.Action("GetErrorCodeMasterDetails", "ErrorCodeMaster")',
                data: { code: code },
                contentType: 'application/json',
                success: function (ErrorCodeMasterViewComponent) {
                    $("#modalCodesMasterBody").html(ErrorCodeMasterViewComponent);
                    $("#modalCodesMaster").modal("show");

                },
                error: function (xhr, status, error) {
                    console.error("Error occurred during update:", error);
                    console.log("Server response:", xhr.responseText);
                }
        });
        }

        //AddNew
        $(function () {
                $('#btnAddNew').click(function () {
                    var CodeMasterViewModel = null;
                    $.ajax({
                        url: "@Url.Action("ShowModal", "ErrorCodeMaster",new { area = "Admin" })",
                        type: 'GET',
                        contentType: 'application/json',
                        data: JSON.stringify(CodeMasterViewModel),
                        success: function (ErrorCodeMasterViewComponent) {
                            $("#modalCodesMasterBody").html(ErrorCodeMasterViewComponent);
                            $("#modalCodesMaster").modal("show");
                            //$("#txtcode").prop("readonly", false);
                            //$("#txttype").prop("readonly", false);
                        },
                        error: function (xhr, status, error) {
                            console.log('Error: ' + error);
                        }
                    });
                });
        })

        //duplicate check
        function CheckErrorCodeMaster() {
            var code = $("#txtErrCode").val();            
            if (code) {
                
                console.log(code);
                //console.log(type);
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("CheckErrorCodeMaster", "ErrorCodeMaster")',
                    data: { code: code},
                    success: function (response) {
                        console.log(response)
                        if (response === true) {
                            $("#txtErrCode").val("");
                            Swal.fire({
                                title: "Error",
                                text: "Error code already exists!",
                                icon: "error"
                            });
                                                  
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error occurred during deletion:", error);
                        console.log("Server response:", xhr.responseText);
                    }
                });
            }

        }

    </script>
}

