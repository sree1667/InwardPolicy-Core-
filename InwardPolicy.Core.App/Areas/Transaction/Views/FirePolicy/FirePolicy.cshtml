@model InwardPolicy.Transaction.Models.FirePolicyModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .date {
        display: inline-block; /* Ensure it doesn't break to the next line */
        width: 85%; /* Adjust width if it's too wide */
        vertical-align: middle; /* Align with other elements */
    }

    #ui-datepicker-div {
        z-index: 1000; /* Ensure datepicker appears above other elements */
    }
</style>
<div class="row justify-content-center mb-2">
    @*<h1>@Html.LabelFor(m => m.FirePolicy.PolNo, "Policy Number:", new { @class = "form-label col-form-label mb-0" })</h1>*@
    <h1><label class="form-label col-form-label mb-0">Fire Policy</label></h1>
    <div class="col">
        <div class="container h-auto p-4 border bg-light rounded shadow mt-2">
            @*<div class="mb-3">
                    @Html.ActionLink("Back", "Index", new { @class = "btn btn-secondary text-light" })
                    <div class="text-center">
                        @Html.ActionLink("Copy", "Copy", new { @class = "btn btn-primary", aria_label = "Copy", @visible = "false" })
                        @Html.ActionLink("Print", "Print", new { @class = "btn btn-danger", aria_label = "Print", @visible = "false" })
                    </div>
                    <div class="text-end mb-2">
                        @Html.ActionLink("Approve", "Approve", new { @class = "btn btn-danger text-light", onclick = "return confirm('Are you sure you want to approve this?');" })
                    </div>
                    <div class="text-end">
                        @Html.LabelFor(m => m.FirePolicy.PolFmDt, "Issue Date:", new { @class = "form-label", @visible = "false" })
                        @Html.TextBoxFor(m => m.FirePolicy.PolFmDt, new { @class = "form-control", @visible = "false" })
                    </div>
                </div>*@

            <!-- Row 1 -->
            <div class="row mb-1">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolNo, "Policy Number:", new { @class = "red form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolNo, new { @class = "form-control", @readonly = "true" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolFmDt, "Policy From Date:", new { @class = "form-label" })
                    <span class="text-danger required-asterisk">*</span>
                    @Html.TextBoxFor(m => m.FirePolicy.PolFmDt, new { id = "txtFromDate", @onchange = "SetToDate()", @class = "form-control date", placeholder = "dd-mm-yyyy", @onfocus = "setMinDate()" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolToDt, "Policy To Date:", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolToDt, new { @id = "txtToDate", @class = "form-control", placeholder = "dd-mm-yyyy", @readonly = "true" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolProdCode, "Product Code:", new { @class = "form-label" })
                    <span class="text-danger required-asterisk">*</span>
                     @Html.DropDownListFor(m => m.FirePolicy.PolProdCode, new SelectList(Model.PolProductCodeList, "Value", "Text"), new { @class = "form-control" })
                </div>
            </div>

            <!-- Row 2 -->
            <div class="row mb-1">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolAssrName, "Name:", new { @class = "form-label" })
                    <span class="text-danger required-asterisk">*</span>
                    @Html.TextBoxFor(m => m.FirePolicy.PolAssrName, new { @class = "form-control", @maxlength = "120" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolAssrAddress, "Address:", new { @class = "form-label" })
                    <span class="text-danger required-asterisk">*</span>
                    @Html.TextBoxFor(m => m.FirePolicy.PolAssrAddress, new { @class = "form-control", @maxlength = "240" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolAssrMobile, "Mobile:", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolAssrMobile, new { @id= "txtMobile", @class = "form-control", @maxlength = "10" })
                    <p id="mobileError" style="color: red;"></p>
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolAssrEmail, "Email:", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolAssrEmail, new { @id = "txtEmail", @class = "form-control", TextMode = "Email", @maxlength = "120" })
                    <p id="error" style="color: red;"></p>
                </div>
            </div>

            <!-- Row 3 -->
            <div class="row mb-1">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolAssrDob, "Date of Birth:", new { @class = "form-label" })
                    <span class="text-danger required-asterisk">*</span>
                    @Html.TextBoxFor(m => m.FirePolicy.PolAssrDob, new { @id = "txtDoB", @class = "form-control date", placeholder = "dd-mm-yyyy", @onchange = "ValidateDoB()" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolAssrOccupation, "Occupation:", new { @class = "form-label" })
                     @Html.DropDownListFor(m => m.FirePolicy.PolAssrOccupation, new SelectList(Model.PolOccupationList, "Value", "Text"), new { @class = "form-select form-control" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolAssrType, "Type:", new { @class = "form-label" })
                    <span class="text-danger required-asterisk">*</span>
                     @Html.DropDownListFor(m => m.FirePolicy.PolAssrType, new SelectList(Model.PolAssuredTypeList, "Value", "Text"), new { @class = "form-select form-control" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolAssrCivilId, "Civil ID:", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolAssrCivilId, new { @class = "form-control", @maxlength = "30" })
                </div>
            </div>

            <!-- Row 4 -->
            <div class="row mb-1">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolSICurrency, "SI Currency:", new { @class = "form-label" })
                    <span class="text-danger required-asterisk">*</span>
                    @Html.DropDownListFor(m => m.FirePolicy.PolSICurrency, new SelectList(Model.PolCurrencyList,"Value","Text"), new { @id = "ddlPolSICurrency", onChange = "ddlPolSICurrency_SelectedIndexChanged()", @class = "form-select form-control" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolSICurrencyRate, "SI Currency Rate:", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolSICurrencyRate, new { @id = "txtPolSICurrencyRate", @class = "form-control text-end" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolPremCurrency, "Premium Currency:", new { @class = "form-label" })
                    <span class="text-danger required-asterisk">*</span>
                    @Html.DropDownListFor(m => m.FirePolicy.PolPremCurrency, new SelectList(Model.PolCurrencyList, "Value", "Text"), new {@id= "ddlPolPremCurrency",  onChange = "ddlPolPremCurrency_SelectedIndexChanged()", @class = "form-select form-control" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolPremCurrencyRate, "Premium Currency Rate:", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolPremCurrencyRate, new { @class = "form-control text-end", @id = "txtPolPremCurrencyRate" })
                </div>
            </div>


            <!-- Row 5 -->
            <div class="row mb-1">
                <!-- FC SI -->
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolFcSi, "FC SI", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolFcSi, new { @class = "text-end form-control", @readonly = "true" })
                </div>
                <!-- LC SI -->
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolLcSi, "LC SI", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolLcSi, new { @class = "text-end form-control", @readonly = "true" })
                </div>
                <!-- Gross FC Premium -->
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolGrossFcPrem, "Gross FC Premium", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolGrossFcPrem, new { @class = "text-end form-control", @readonly = "true" })
                </div>
                <!-- Gross LC Premium -->
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolGrossLcPrem, "Gross LC Premium", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolGrossLcPrem, new { @class = "text-end form-control", @readonly = "true" })
                </div>
            </div>

            <!-- Row 6 -->
            <div class="row mb-1">
                <!-- VAT FC Amount -->
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolVatFcAmt, "VAT FC Amount", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolVatFcAmt, new { @class = "text-end form-control", @readonly = "true" })
                </div>
                <!-- VAT LC Amount -->
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolVatLcAmt, "VAT LC Amount", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolVatLcAmt, new { @class = "text-end form-control", @readonly = "true", @autopostback = "true" })
                </div>
                <!-- Net FC Premium -->
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolNetFcPrem, "Net FC Premium", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolNetFcPrem, new { @class = "text-end form-control", @readonly = "true" })
                </div>
                <!-- Net LC Premium -->
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FirePolicy.PolNetLcPrem, "Net LC Premium", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FirePolicy.PolNetLcPrem, new { @class = "text-end form-control", @readonly = "true" })
                </div>
            </div>

            <!-- Submit -->
            <div class="text-center mt-3">
                <button class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>
@*<img src="~/images/calenderIcon.png" />*@
<script src="~/js/FirePolicy.js"></script>
@section Scripts{
    <script>
        //to date
        function ddlPolSICurrency_SelectedIndexChanged() {

            var selectedValue = $('#ddlPolSICurrency').val();
            //alert(selectedValue);
            if (selectedValue) {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetCurrencyRate","FirePolicy")',
                    data: { value: selectedValue },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log(response)
                        //$('#txtPolSICurrencyRate').val(response.d);
                        $('#txtPolSICurrencyRate').val(response);
                    },
                    error: function (response) {
                        console.log("Error: " + response);
                    }
                });
            }
        }
        //Policy Prem
        function ddlPolPremCurrency_SelectedIndexChanged() {
            var selectedValue = $('#ddlPolPremCurrency').val();
            //alert(selectedValue);
            if (selectedValue) {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetCurrencyRate","FirePolicy")',
                    data: { value: selectedValue },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log(response)
                        //$('#txtPolSICurrencyRate').val(response.d);
                        //$('#txtPolSICurrencyRate').val(response);
                        $('#txtPolPremCurrencyRate').val(response);
                    },
                    error: function (response) {
                        console.log("Error: " + response);
                    }
                });
            }
        }
        function SetToDate() {
            var fromDate = $("#txtFromDate").val();
            console.log(fromDate);
            $.ajax({
                type: "GET",
                url: '@Url.Action( "SetToDate", "FirePolicy")',
                data: { fromDate: fromDate },
                success: function (response) {
                    console.log("AJAX request was successful. Response:", response);
                    if (response) {
                        $("#txtToDate").val(response);

                    }
                    else {
                        Swal.fire({
                            title: 'Invalid Date',
                            text: 'Please enter a valid date.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                        $("#txtToDate").val('');
                        $("#txtFromDate").val('');
                    }
                    $('#tblCodesMaster').DataTable().ajax.reload();
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred during deletion:", error);
                    console.log("Server response:", xhr.responseText);
                }
            });
        }
        //date of birth validation
        function ValidateDoB() {
            var dob = $("#txtDoB").val();
            console.log(dob);
            $.ajax({
                type: "GET",
                url: '@Url.Action("ValidateDoB", "FirePolicy")',
                data: { dob: dob },
                success: function (response) {
                    console.log("AJAX request was successful. Response:", response);
                    if (response) {
                        $("#txtDoB").val(response);

                    }
                    else {
                        Swal.fire({
                            title: 'Invalid Date',
                            text: 'Please enter a valid date.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                        $("#txtDoB").val('');

                    }
                    $('#tblCodesMaster').DataTable().ajax.reload();
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred during deletion:", error);
                    console.log("Server response:", xhr.responseText);
                }
            });
        }
    </script>
}

